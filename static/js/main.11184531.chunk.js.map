{"version":3,"sources":["FromServerData.js","User.js","Comment.js","CommentList.js","Post.js","PostList.js","App.js","index.js"],"names":["getDataUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","DataUsers","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getDataPosts","_ref2","_callee2","DataPosts","_context2","getDataComments","_ref3","_callee3","DataComments","_context3","User","preparedUser","react_default","createElement","name","username","email","Comment","preparedComment","className","body","CommentList","state","isLoaded","isLoading","handleClickHide","_this","setState","setTimeout","handleClick","type","onClick","props","map","comment","src_Comment","key","id","React","Component","Post","dataPost","src_User","user","title","src_CommentList","comments","PostList","currentPost","post","src_Post","App","originalPosts","onClickLoad","users","posts","preparedPosts","objectSpread","filter","postId","find","userId","handleSearch","someType","search","target","value","prevState","text","join","toLowerCase","includes","placeholder","onChange","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.11184531.chunk.js","sourcesContent":["const urlUsers = 'https://jsonplaceholder.typicode.com/users';\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\nconst urlCommnets = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const getDataUsers = async() => {\n  const response = await fetch(urlUsers);\n  const DataUsers = await response.json();\n\n  return DataUsers;\n};\n\nexport const getDataPosts = async() => {\n  const response = await fetch(urlPosts);\n  const DataPosts = await response.json();\n\n  return DataPosts;\n};\n\nexport const getDataComments = async() => {\n  const response = await fetch(urlCommnets);\n  const DataComments = await response.json();\n\n  return DataComments;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ preparedUser }) => (\n  <div>\n    <p>{preparedUser.name}</p>\n    <p>{preparedUser.username}</p>\n    <p>{preparedUser.email}</p>\n  </div>\n);\n\nUser.propTypes = {\n  preparedUser: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ preparedComment }) => (\n  <pre className=\"App__comment\">\n    <h3>{preparedComment.email}</h3>\n    <p>Comment:</p>\n    <p>{preparedComment.body}</p>\n  </pre>\n);\n\nComment.propTypes = {\n  preparedComment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nclass CommentList extends React.Component {\n  state = {\n    isLoaded: false,\n    isLoading: false,\n  }\n\n  handleClickHide = () => {\n    this.setState({\n      isLoading: false,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: false,\n        isLoading: true,\n      });\n    }, 10);\n  };\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 10);\n  }\n\n  render() {\n    return (\n      <div className=\"App__comment_list\">\n        { this.state.isLoaded\n          ? (\n            <div>\n              <button\n                type=\"button\"\n                onClick={this.handleClickHide}\n              >\n                { this.state.isLoading ? 'Loading' : 'Hide Comment' }\n              </button>\n              {this.props.preparedComment.map(comment => (\n                <Comment preparedComment={comment} key={comment.id} />\n              ))}\n            </div>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={this.handleClick}\n            >\n              { this.state.isLoading ? 'Comment' : 'Comment' }\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  preparedComment: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ dataPost }) => (\n  <div className=\"app__data--post\">\n    <User preparedUser={dataPost.user} key={dataPost.user.id} />\n    <h1 className=\"app__title\">{dataPost.title}</h1>\n    <p className=\"app__body\">{dataPost.body}</p>\n    <CommentList preparedComment={dataPost.comments} />\n  </div>\n);\n\nPost.propTypes = {\n  dataPost: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ currentPost }) => (\n  <div className=\"app__container\">\n    {currentPost.map(post => (\n      <Post dataPost={post} key={currentPost.id} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  currentPost: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport { getDataUsers, getDataPosts, getDataComments } from './FromServerData';\nimport PostList from './PostList';\n\nclass App extends React.Component {\n  state = {\n    currentPost: [],\n    isLoading: false,\n    isLoaded: false,\n    originalPosts: [],\n  };\n\n  onClickLoad = async() => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const users = await getDataUsers();\n    const posts = await getDataPosts();\n    const comments = await getDataComments();\n\n    const preparedPosts = posts.map(post => ({\n      ...post,\n      comments: comments.filter(comment => post.id === comment.postId),\n      user: users.find(user => user.id === post.userId),\n    }));\n\n    this.setState({\n      currentPost: preparedPosts,\n      originalPosts: preparedPosts,\n      isLoaded: true,\n      isLoading: false,\n    });\n  }\n\n  handleSearch = (someType) => {\n    const search = someType.target.value;\n\n    this.setState(prevState => ({\n      currentPost: prevState.originalPosts.filter(\n        text => [text.title, text.body]\n          .join('')\n          .toLowerCase()\n          .includes(search.toLowerCase())\n      ),\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.isLoaded ? (\n          <div className=\"App\">\n            <input\n              type=\"text\"\n              className=\"search_input\"\n              placeholder=\"Search\"\n              onChange={this.handleSearch}\n            />\n            <PostList currentPost={this.state.currentPost} />\n          </div>\n        ) : (\n          <button type=\"button\" onClick={this.onClickLoad}>\n            {this.state.isLoading ? 'Loading...' : 'Load'}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}